version: '3.7'
services:

  api:
    build:
      dockerfile: ./api/Dockerfile
      context: .
    container_name: cron-mon-api
    stdin_open: true
    tty: true
    environment:
      DATABASE_URL: postgres://cron-mon-api:itsasecret@cron-mon-db/cron-mon
    volumes:
      - ./api:/usr/cron-mon/api
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    command: cargo run
    networks:
      - default
      - rusty-network

  app:
    build:
      dockerfile: ./app/Dockerfile
      context: .
    container_name: cron-mon-app
    stdin_open: true
    tty: true
    volumes:
      - ./app:/usr/cron-mon/app
    ports:
      - 3000:3000
    command: npm run dev
    networks:
      - default
      - rusty-network

  db:
    container_name: cron-mon-db
    image: bitnami/postgresql:16.1.0
    environment:
      POSTGRESQL_USERNAME: cron-mon-api
      POSTGRES_PASSWORD: itsasecret
      POSTGRESQL_DATABASE: cron-mon
    ports:
      - 54320:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  rusty-network:
    driver: bridge
    name: rusty-network
