name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Build test image
        run: docker compose build rust-cargo

      - name: Run cargo fmt and clippy
        run: make lint

      # - name: Install rust
      #   run: rustup install 1.83

      # - name: Cache dependencies
      #   uses: Swatinem/rust-cache@v2
      #   with:
      #     workspaces: "api"

      # - name: Run cargo fmt and clippy
      #   run: make lint

  # unit-tests:
  #   name: Unit tests
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./api
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v4

  #     - name: Install rust
  #       run: rustup install 1.83

  #     - name: Cache dependencies
  #       uses: Swatinem/rust-cache@v2
  #       with:
  #         workspaces: "api"

  #     - name: Run cargo test
  #       run: make unit-test

  # integration-tests:
  #   name: Integration tests
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./api
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v4

  #     - name: Install rust
  #       run: rustup install 1.83

  #     - name: Install dependencies
  #       run: |
  #         apt-get update && apt-get install build-essential libpq-dev libssl-dev pkg-config -y
  #         cargo install diesel_cli --no-default-features --features postgres

  #     - name: Cache dependencies
  #       uses: Swatinem/rust-cache@v2
  #       with:
  #         workspaces: "api"

  #     - name: Run integration test
  #       run: make integration-tests

  # test-coverage:
  #   name: Test coverage
  #   needs: [lint, unit-tests, integration-tests]
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./api
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v4

  #     - name: Install rust
  #       run: rustup install 1.83

  #     - name: Install dependencies
  #       run: |
  #         apt-get update && apt-get install build-essential git libpq-dev libssl-dev pkg-config -y
  #         cargo install diesel_cli --no-default-features --features postgres

  #     - name: Install cargo-llvm-cov
  #       uses: taiki-e/install-action@cargo-llvm-cov

  #     - name: Cache dependencies
  #       uses: Swatinem/rust-cache@v2
  #       with:
  #         workspaces: "api"

  #     - name: Run cargo test
  #       run: make test-coverage

  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v5
  #       with:
  #         files: lcov.info
  #         fail_ci_if_error: true
  #         token: ${{ secrets.CODECOV_TOKEN }}

  # build-and-push-image:
  #   name: Build and push container image to ghcr.io
  #   needs: test-coverage
  #   if: ${{ github.ref_name == 'main' }}
  #   permissions:
  #     contents: read
  #     packages: write
  #     attestations: write
  #     id-token: write
  #   uses: cron-mon-io/ghcr-actions/.github/workflows/build-and-push.yml@main
