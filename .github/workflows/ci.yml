on:
  push:
    branches:
      - main
  pull_request:

name: CI

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install rust
        run: rustup install 1.79.0

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "api"

      - name: Run cargo fmt and clippy
        run: make lint

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install rust
        run: rustup install 1.79.0

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "api"

      - name: Run cargo test
        run: make unit-test

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    container: public.ecr.aws/docker/library/rust:1.79.0-slim
    services:
      cron-mon-db:
        image: public.ecr.aws/docker/library/postgres:16.1
        env:
          POSTGRES_USER: cron-mon-api
          POSTGRES_PASSWORD: itsasecret
          POSTGRES_DB: cron-mon
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install dependencies
        run: apt-get update && apt-get install build-essential libpq-dev -y

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "api"

      - name: Install diesel-cli
        run: cargo install diesel_cli --no-default-features --features postgres

      - name: Run migrations
        run: make migrate
        env:
          DATABASE_URL: postgres://cron-mon-api:itsasecret@cron-mon-db/cron-mon

      - name: Run integration test
        run: make integration-tests
        env:
          DATABASE_URL: postgres://cron-mon-api:itsasecret@cron-mon-db/cron-mon

  test-coverage:
    name: Test coverage
    needs: [lint, unit-tests, integration-tests]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    container: public.ecr.aws/docker/library/rust:1.79.0-slim
    services:
      cron-mon-db:
        image: public.ecr.aws/docker/library/postgres:16.1
        env:
          POSTGRES_USER: cron-mon-api
          POSTGRES_PASSWORD: itsasecret
          POSTGRES_DB: cron-mon
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install dependencies
        run: apt-get update && apt-get install build-essential libpq-dev -y

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "api"

      - name: Install diesel-cli
        run: cargo install diesel_cli --no-default-features --features postgres

      - name: Run migrations
        run: make migrate
        env:
          DATABASE_URL: postgres://cron-mon-api:itsasecret@cron-mon-db/cron-mon

      - name: Run cargo test
        run: make test-coverage
        env:
          DATABASE_URL: postgres://cron-mon-api:itsasecret@cron-mon-db/cron-mon
